// 1 - Testing default/alpha1/best-improving/random bias.

# 020

(Iter. 0) BestSol = Solution: cost=[-107.0], size=[9], elements=[12, 14, 4, 1, 2, 0, 9, 18, 8]
(Iter. 3) BestSol = Solution: cost=[-108.0], size=[9], elements=[4, 2, 11, 15, 13, 16, 3, 6, 18]
(Iter. 4) BestSol = Solution: cost=[-120.0], size=[7], elements=[4, 2, 14, 11, 15, 16, 3]
(Iter. 32) BestSol = Solution: cost=[-125.0], size=[9], elements=[4, 2, 11, 14, 15, 16, 3, 19, 9]
Total iterations: 1000
maxVal = Solution: cost=[-125.0], size=[9], elements=[4, 2, 11, 14, 15, 16, 3, 19, 9]
Time = 0.757 seg
___________________________________________________________________________________________________________________________

# 040

(Iter. 0) BestSol = Solution: cost=[-294.0], size=[19], elements=[25, 24, 1, 14, 31, 8, 22, 7, 36, 3, 18, 2, 23, 19, 34, 26, 9, 4, 11]
(Iter. 1) BestSol = Solution: cost=[-352.0], size=[20], elements=[1, 25, 2, 18, 14, 26, 24, 19, 21, 31, 34, 36, 7, 4, 11, 9, 23, 3, 15, 33]
(Iter. 179) BestSol = Solution: cost=[-366.0], size=[20], elements=[25, 14, 4, 32, 7, 19, 2, 33, 26, 24, 31, 1, 36, 34, 23, 18, 11, 9, 21, 15]
Total iterations: 1000
maxVal = Solution: cost=[-366.0], size=[20], elements=[25, 14, 4, 32, 7, 19, 2, 33, 26, 24, 31, 1, 36, 34, 23, 18, 11, 9, 21, 15]
Time = 3.236 seg
___________________________________________________________________________________________________________________________

# 060

(Iter. 0) BestSol = Solution: cost=[-397.0], size=[25], elements=[34, 4, 33, 28, 16, 12, 45, 49, 11, 24, 41, 19, 57, 3, 15, 30, 22, 21, 27, 39, 55, 51, 59, 46, 18]
(Iter. 1) BestSol = Solution: cost=[-407.0], size=[27], elements=[4, 30, 28, 17, 21, 1, 34, 8, 42, 23, 52, 56, 44, 2, 51, 18, 26, 45, 38, 32, 11, 29, 53, 14, 12, 33, 55]
(Iter. 3) BestSol = Solution: cost=[-408.0], size=[25], elements=[28, 4, 40, 49, 17, 26, 9, 30, 34, 11, 52, 41, 38, 31, 24, 16, 22, 23, 18, 44, 33, 2, 45, 0, 50]
(Iter. 8) BestSol = Solution: cost=[-413.0], size=[25], elements=[43, 38, 14, 56, 34, 44, 29, 54, 51, 42, 17, 21, 41, 16, 49, 3, 24, 46, 26, 11, 4, 12, 55, 35, 59]
(Iter. 9) BestSol = Solution: cost=[-433.0], size=[27], elements=[52, 17, 30, 42, 40, 28, 34, 23, 1, 41, 16, 11, 4, 18, 49, 44, 53, 33, 24, 27, 29, 51, 56, 14, 35, 26, 2]
(Iter. 15) BestSol = Solution: cost=[-470.0], size=[25], elements=[44, 17, 3, 26, 2, 27, 31, 38, 42, 29, 51, 34, 4, 56, 54, 35, 49, 24, 43, 22, 41, 16, 23, 59, 14]
(Iter. 31) BestSol = Solution: cost=[-490.0], size=[28], elements=[44, 21, 17, 38, 28, 42, 56, 34, 51, 3, 26, 24, 11, 30, 4, 16, 41, 49, 46, 22, 29, 55, 53, 35, 59, 45, 23, 14]
(Iter. 52) BestSol = Solution: cost=[-492.0], size=[24], elements=[54, 4, 2, 44, 56, 29, 35, 51, 42, 27, 26, 17, 30, 38, 55, 3, 24, 43, 13, 14, 59, 49, 19, 16]
(Iter. 119) BestSol = Solution: cost=[-496.0], size=[26], elements=[34, 17, 16, 42, 3, 26, 51, 49, 38, 11, 44, 27, 56, 30, 29, 14, 4, 12, 24, 43, 54, 33, 2, 55, 59, 35]
(Iter. 180) BestSol = Solution: cost=[-508.0], size=[25], elements=[54, 4, 44, 27, 43, 56, 42, 3, 13, 55, 2, 33, 51, 26, 29, 24, 17, 14, 30, 35, 19, 38, 59, 16, 49]
Total iterations: 1000
maxVal = Solution: cost=[-508.0], size=[25], elements=[54, 4, 44, 27, 43, 56, 42, 3, 13, 55, 2, 33, 51, 26, 29, 24, 17, 14, 30, 35, 19, 38, 59, 16, 49]
Time = 17.111 seg
___________________________________________________________________________________________________________________________

# 080

(Iter. 0) BestSol = Solution: cost=[-667.0], size=[34], elements=[0, 38, 72, 64, 43, 59, 65, 41, 31, 47, 25, 48, 28, 37, 5, 29, 77, 50, 73, 24, 8, 35, 2, 18, 13, 23, 66, 42, 52, 51, 54, 44, 76, 49]
(Iter. 2) BestSol = Solution: cost=[-756.0], size=[31], elements=[31, 2, 7, 18, 3, 13, 75, 42, 54, 36, 48, 23, 44, 49, 6, 50, 47, 73, 74, 37, 71, 76, 62, 66, 8, 24, 58, 55, 64, 41, 43]
(Iter. 3) BestSol = Solution: cost=[-762.0], size=[33], elements=[36, 37, 29, 2, 23, 48, 60, 46, 58, 18, 19, 9, 62, 31, 69, 42, 64, 12, 3, 14, 43, 1, 53, 24, 22, 71, 70, 73, 75, 74, 4, 27, 55]
(Iter. 10) BestSol = Solution: cost=[-765.0], size=[35], elements=[60, 3, 7, 14, 50, 61, 69, 6, 16, 42, 49, 36, 4, 18, 54, 31, 48, 11, 2, 44, 75, 37, 47, 24, 73, 55, 8, 62, 74, 76, 22, 64, 19, 71, 79]
(Iter. 80) BestSol = Solution: cost=[-785.0], size=[34], elements=[24, 69, 39, 53, 50, 14, 7, 49, 74, 21, 6, 61, 3, 36, 52, 11, 55, 44, 76, 8, 20, 4, 18, 47, 42, 2, 70, 19, 75, 71, 48, 62, 43, 34]
(Iter. 116) BestSol = Solution: cost=[-798.0], size=[35], elements=[6, 2, 44, 18, 14, 54, 50, 7, 36, 47, 49, 3, 4, 37, 74, 42, 61, 72, 51, 58, 52, 62, 76, 55, 24, 43, 48, 8, 11, 70, 75, 71, 19, 21, 22]
(Iter. 204) BestSol = Solution: cost=[-800.0], size=[35], elements=[36, 62, 48, 19, 8, 37, 47, 31, 18, 2, 71, 58, 46, 49, 22, 50, 14, 64, 76, 44, 74, 9, 24, 43, 53, 20, 70, 34, 3, 1, 42, 4, 75, 55, 23]
(Iter. 207) BestSol = Solution: cost=[-812.0], size=[34], elements=[37, 2, 18, 48, 42, 58, 31, 46, 75, 54, 9, 65, 43, 19, 71, 3, 64, 13, 62, 29, 12, 1, 60, 27, 22, 24, 10, 4, 73, 5, 57, 70, 11, 51]
(Iter. 285) BestSol = Solution: cost=[-828.0], size=[35], elements=[31, 48, 75, 3, 54, 36, 18, 62, 2, 71, 19, 8, 9, 42, 73, 70, 43, 37, 76, 13, 4, 58, 46, 1, 44, 49, 51, 5, 22, 69, 60, 57, 79, 24, 55]
(Iter. 601) BestSol = Solution: cost=[-832.0], size=[36], elements=[31, 7, 48, 60, 36, 69, 54, 3, 18, 4, 49, 44, 13, 2, 75, 1, 42, 61, 37, 73, 62, 71, 8, 19, 24, 47, 74, 23, 76, 51, 55, 22, 64, 46, 9, 43]
Total iterations: 1000
maxVal = Solution: cost=[-832.0], size=[36], elements=[31, 7, 48, 60, 36, 69, 54, 3, 18, 4, 49, 44, 13, 2, 75, 1, 42, 61, 37, 73, 62, 71, 8, 19, 24, 47, 74, 23, 76, 51, 55, 22, 64, 46, 9, 43]
Time = 44.996 seg

___________________________________________________________________________________________________________________________

# 100

(Iter. 0) BestSol = Solution: cost=[-1026.0], size=[41], elements=[82, 21, 73, 63, 44, 23, 9, 2, 7, 98, 22, 51, 52, 70, 33, 74, 29, 31, 17, 18, 49, 38, 10, 57, 14, 89, 34, 64, 92, 95, 24, 93, 56, 16, 68, 80, 71, 81, 25, 28, 55]
(Iter. 2) BestSol = Solution: cost=[-1134.0], size=[43], elements=[20, 44, 5, 48, 72, 61, 96, 2, 0, 92, 45, 13, 15, 33, 94, 67, 69, 10, 71, 84, 58, 79, 85, 17, 63, 73, 50, 91, 21, 8, 9, 23, 75, 16, 62, 98, 39, 29, 6, 14, 12, 55, 59]
(Iter. 17) BestSol = Solution: cost=[-1158.0], size=[43], elements=[74, 37, 97, 61, 3, 51, 79, 23, 45, 49, 68, 92, 31, 2, 9, 22, 98, 17, 16, 85, 84, 10, 63, 19, 14, 62, 29, 18, 7, 25, 44, 55, 28, 33, 73, 96, 86, 90, 15, 71, 20, 5, 0]
(Iter. 33) BestSol = Solution: cost=[-1177.0], size=[43], elements=[61, 13, 45, 84, 94, 43, 12, 33, 92, 69, 67, 48, 85, 16, 2, 17, 10, 20, 8, 68, 91, 59, 44, 72, 79, 6, 14, 63, 96, 50, 71, 62, 55, 15, 73, 21, 9, 23, 75, 22, 98, 29, 5]
(Iter. 119) BestSol = Solution: cost=[-1179.0], size=[42], elements=[27, 56, 40, 2, 22, 94, 84, 81, 26, 23, 34, 51, 10, 64, 18, 7, 17, 78, 38, 89, 62, 29, 90, 39, 95, 96, 74, 44, 69, 59, 91, 73, 33, 43, 63, 71, 24, 14, 93, 57, 80, 66]
(Iter. 124) BestSol = Solution: cost=[-1201.0], size=[43], elements=[2, 7, 18, 10, 37, 17, 44, 73, 23, 19, 14, 96, 95, 29, 42, 59, 51, 62, 33, 27, 90, 89, 68, 91, 31, 28, 22, 72, 34, 64, 74, 43, 56, 16, 38, 69, 24, 25, 71, 45, 66, 57, 50]
(Iter. 174) BestSol = Solution: cost=[-1213.0], size=[47], elements=[23, 95, 68, 62, 61, 2, 79, 17, 10, 51, 28, 84, 19, 74, 44, 31, 22, 96, 3, 14, 18, 29, 91, 86, 63, 78, 33, 7, 90, 49, 25, 11, 24, 71, 81, 64, 38, 43, 89, 57, 34, 56, 83, 69, 27, 94, 26]
(Iter. 565) BestSol = Solution: cost=[-1227.0], size=[46], elements=[23, 22, 62, 74, 29, 51, 38, 57, 78, 18, 34, 56, 10, 33, 89, 17, 19, 68, 85, 63, 7, 64, 11, 43, 14, 86, 44, 2, 66, 42, 96, 24, 40, 90, 71, 25, 91, 73, 28, 84, 81, 69, 16, 45, 3, 49]
Total iterations: 1000
maxVal = Solution: cost=[-1227.0], size=[46], elements=[23, 22, 62, 74, 29, 51, 38, 57, 78, 18, 34, 56, 10, 33, 89, 17, 19, 68, 85, 63, 7, 64, 11, 43, 14, 86, 44, 2, 66, 42, 96, 24, 40, 90, 71, 25, 91, 73, 28, 84, 81, 69, 16, 45, 3, 49]
Time = 70.389 seg

___________________________________________________________________________________________________________________________

# 200

(Iter. 0) BestSol = Solution: cost=[-3199.0], size=[87], elements=[89, 171, 6, 119, 117, 66, 107, 49, 61, 114, 187, 159, 96, 5, 148, 88, 21, 86, 166, 136, 183, 65, 184, 125, 43, 28, 20, 93, 17, 30, 74, 133, 139, 8, 94, 157, 15, 110, 144, 67, 192, 153, 167, 82, 169, 1, 100, 34, 129, 4, 103, 179, 47, 164, 69, 25, 63, 53, 108, 143, 97, 23, 190, 121, 176, 72, 145, 13, 83, 150, 16, 95, 54, 193, 39, 56, 195, 29, 147, 26, 73, 126, 134, 177, 113, 123, 111]
(Iter. 1) BestSol = Solution: cost=[-3529.0], size=[86], elements=[184, 87, 21, 13, 117, 7, 84, 107, 69, 56, 49, 179, 34, 31, 127, 145, 192, 77, 6, 72, 199, 157, 167, 144, 58, 119, 162, 16, 53, 164, 67, 185, 41, 196, 30, 32, 171, 155, 138, 68, 140, 131, 148, 139, 90, 92, 137, 129, 154, 111, 85, 86, 116, 100, 19, 25, 61, 78, 50, 51, 141, 54, 99, 174, 9, 70, 175, 62, 132, 124, 112, 126, 106, 104, 180, 12, 166, 81, 161, 82, 80, 52, 183, 0, 36, 103]
(Iter. 5) BestSol = Solution: cost=[-3589.0], size=[87], elements=[143, 150, 83, 103, 1, 4, 159, 154, 19, 125, 160, 164, 46, 131, 166, 76, 108, 30, 72, 133, 69, 163, 167, 162, 5, 114, 119, 176, 153, 23, 74, 62, 9, 155, 199, 171, 31, 81, 28, 181, 51, 16, 148, 63, 17, 80, 169, 87, 134, 132, 25, 129, 145, 45, 156, 7, 73, 85, 136, 157, 34, 77, 100, 56, 58, 82, 52, 89, 40, 21, 158, 49, 99, 47, 110, 147, 102, 18, 139, 94, 198, 137, 184, 93, 38, 190, 13]
(Iter. 8) BestSol = Solution: cost=[-3654.0], size=[93], elements=[15, 121, 104, 7, 70, 127, 99, 167, 124, 103, 122, 184, 145, 141, 67, 174, 173, 123, 52, 32, 78, 1, 25, 154, 51, 69, 157, 148, 4, 6, 30, 9, 140, 169, 183, 54, 92, 63, 49, 16, 166, 19, 31, 114, 13, 85, 155, 100, 72, 143, 162, 180, 58, 18, 34, 179, 126, 129, 160, 192, 110, 131, 77, 158, 80, 106, 113, 81, 21, 95, 119, 111, 137, 87, 196, 33, 190, 117, 56, 28, 89, 61, 175, 45, 46, 139, 50, 138, 185, 36, 199, 73, 115]
(Iter. 11) BestSol = Solution: cost=[-3727.0], size=[89], elements=[184, 6, 196, 5, 121, 49, 169, 125, 166, 69, 148, 23, 66, 114, 183, 43, 113, 1, 67, 145, 99, 167, 103, 63, 70, 157, 119, 134, 155, 4, 17, 7, 81, 100, 141, 110, 106, 33, 172, 80, 72, 174, 31, 123, 108, 94, 179, 45, 19, 85, 175, 29, 162, 54, 30, 127, 165, 154, 56, 11, 87, 116, 131, 129, 25, 143, 147, 126, 117, 61, 83, 21, 84, 192, 164, 160, 138, 9, 195, 26, 171, 34, 181, 88, 153, 136, 13, 73, 39]
(Iter. 19) BestSol = Solution: cost=[-3836.0], size=[92], elements=[4, 49, 108, 80, 101, 174, 152, 99, 21, 176, 54, 192, 145, 102, 147, 9, 110, 135, 23, 141, 62, 70, 193, 61, 31, 124, 166, 103, 157, 155, 162, 160, 19, 85, 18, 121, 30, 114, 95, 94, 122, 52, 45, 143, 7, 51, 164, 148, 158, 63, 17, 66, 153, 46, 127, 88, 43, 137, 25, 97, 76, 86, 181, 184, 69, 111, 123, 159, 125, 40, 11, 81, 190, 151, 56, 146, 13, 154, 67, 15, 48, 47, 171, 169, 100, 195, 156, 37, 89, 93, 42, 117]
(Iter. 215) BestSol = Solution: cost=[-3875.0], size=[95], elements=[141, 143, 4, 94, 184, 123, 44, 6, 19, 108, 126, 169, 87, 138, 125, 30, 83, 61, 101, 166, 51, 181, 93, 39, 8, 175, 45, 110, 54, 167, 23, 43, 121, 137, 95, 67, 145, 52, 49, 103, 155, 113, 46, 140, 63, 157, 34, 31, 85, 25, 196, 158, 7, 28, 69, 16, 147, 13, 185, 174, 99, 172, 15, 77, 33, 80, 72, 131, 154, 173, 70, 180, 81, 86, 89, 40, 133, 119, 153, 21, 114, 106, 100, 198, 115, 58, 73, 117, 192, 104, 68, 139, 160, 37, 47]
(Iter. 779) BestSol = Solution: cost=[-3891.0], size=[91], elements=[184, 192, 21, 69, 131, 172, 114, 179, 141, 86, 193, 155, 195, 197, 94, 156, 17, 9, 157, 117, 48, 7, 31, 80, 54, 99, 171, 111, 160, 110, 66, 43, 44, 34, 84, 4, 145, 23, 162, 101, 127, 81, 51, 106, 147, 30, 16, 37, 167, 85, 166, 108, 49, 67, 45, 174, 19, 70, 196, 140, 154, 125, 25, 169, 95, 87, 11, 121, 76, 83, 152, 198, 61, 104, 158, 18, 123, 90, 134, 143, 175, 73, 129, 13, 47, 190, 103, 97, 122, 15, 20]
Total iterations: 1000
maxVal = Solution: cost=[-3891.0], size=[91], elements=[184, 192, 21, 69, 131, 172, 114, 179, 141, 86, 193, 155, 195, 197, 94, 156, 17, 9, 157, 117, 48, 7, 31, 80, 54, 99, 171, 111, 160, 110, 66, 43, 44, 34, 84, 4, 145, 23, 162, 101, 127, 81, 51, 106, 147, 30, 16, 37, 167, 85, 166, 108, 49, 67, 45, 174, 19, 70, 196, 140, 154, 125, 25, 169, 95, 87, 11, 121, 76, 83, 152, 198, 61, 104, 158, 18, 123, 90, 134, 143, 175, 73, 129, 13, 47, 190, 103, 97, 122, 15, 20]
Time = 393.138 seg

___________________________________________________________________________________________________________________________

# 400

(Iter. 0) BestSol = Solution: cost=[-9623.0], size=[174], elements=[50, 341, 335, 159, 279, 108, 47, 10, 285, 229, 393, 293, 38, 35, 276, 361, 373, 101, 235, 66, 389, 171, 377, 326, 327, 154, 307, 234, 246, 287, 272, 29, 100, 369, 253, 383, 76, 155, 109, 340, 152, 270, 198, 80, 110, 238, 31, 368, 140, 62, 244, 208, 323, 250, 125, 48, 189, 196, 339, 240, 157, 317, 366, 9, 85, 181, 69, 288, 158, 360, 56, 211, 166, 92, 195, 296, 304, 72, 267, 236, 81, 53, 289, 22, 226, 275, 17, 24, 146, 247, 239, 385, 162, 371, 99, 342, 352, 23, 386, 148, 306, 312, 95, 65, 84, 106, 30, 357, 153, 184, 177, 251, 273, 97, 160, 7, 182, 15, 147, 192, 172, 49, 187, 245, 82, 230, 11, 114, 259, 51, 254, 94, 193, 376, 77, 73, 107, 372, 111, 117, 134, 364, 248, 124, 28, 122, 96, 25, 354, 384, 165, 1, 260, 174, 4, 309, 332, 294, 277, 127, 220, 258, 183, 224, 34, 179, 139, 325, 381, 278, 297, 54, 86, 390]
(Iter. 2) BestSol = Solution: cost=[-10069.0], size=[189], elements=[342, 263, 206, 372, 331, 293, 187, 328, 277, 105, 98, 169, 399, 319, 327, 69, 214, 119, 294, 267, 375, 66, 17, 240, 165, 166, 285, 159, 274, 383, 145, 34, 19, 258, 153, 101, 229, 158, 75, 286, 270, 53, 236, 316, 307, 99, 288, 108, 4, 83, 5, 339, 82, 49, 154, 305, 110, 243, 290, 211, 312, 306, 155, 94, 23, 95, 80, 16, 340, 244, 162, 269, 215, 176, 157, 354, 350, 253, 9, 10, 254, 360, 193, 296, 323, 335, 276, 148, 160, 357, 33, 394, 232, 378, 373, 318, 179, 28, 124, 247, 30, 189, 24, 1, 18, 376, 260, 368, 97, 93, 239, 150, 259, 63, 235, 196, 85, 393, 252, 332, 62, 54, 183, 174, 111, 192, 398, 382, 84, 278, 50, 114, 143, 76, 289, 134, 38, 216, 352, 88, 364, 152, 246, 177, 390, 385, 208, 279, 224, 271, 47, 220, 226, 14, 92, 301, 356, 147, 297, 380, 374, 163, 168, 230, 389, 309, 358, 348, 6, 347, 91, 365, 190, 61, 103, 87, 199, 227, 324, 65, 41, 266, 395, 73, 139, 21, 129, 292, 126]
(Iter. 9) BestSol = Solution: cost=[-10214.0], size=[180], elements=[304, 184, 121, 377, 8, 125, 289, 5, 168, 23, 360, 368, 260, 244, 378, 275, 119, 259, 348, 389, 92, 229, 286, 285, 6, 366, 120, 177, 94, 352, 373, 288, 77, 49, 66, 205, 75, 11, 17, 206, 67, 328, 136, 362, 253, 305, 317, 269, 312, 236, 157, 4, 82, 158, 273, 276, 88, 101, 166, 10, 265, 147, 251, 266, 63, 172, 323, 332, 93, 383, 183, 170, 380, 195, 15, 85, 110, 165, 148, 196, 114, 96, 228, 306, 20, 28, 240, 371, 69, 296, 384, 320, 97, 192, 342, 263, 80, 47, 230, 370, 211, 108, 208, 309, 25, 386, 387, 247, 62, 210, 1, 215, 21, 325, 138, 35, 30, 16, 234, 153, 290, 227, 14, 222, 156, 143, 385, 64, 277, 171, 111, 295, 233, 132, 3, 73, 174, 134, 235, 150, 162, 81, 349, 179, 163, 278, 103, 53, 216, 314, 338, 308, 391, 87, 327, 84, 375, 190, 38, 398, 191, 382, 243, 357, 142, 395, 199, 316, 58, 358, 100, 50, 164, 12, 167, 54, 117, 60, 200, 45]
(Iter. 19) BestSol = Solution: cost=[-10298.0], size=[180], elements=[335, 193, 38, 393, 87, 263, 287, 398, 53, 107, 353, 327, 246, 377, 220, 296, 277, 230, 380, 151, 133, 136, 348, 5, 30, 159, 10, 292, 265, 157, 168, 150, 148, 3, 385, 179, 73, 57, 121, 126, 386, 155, 239, 17, 124, 244, 281, 130, 366, 138, 158, 28, 304, 354, 156, 364, 372, 15, 273, 81, 144, 35, 100, 349, 241, 11, 325, 62, 96, 339, 212, 51, 371, 260, 25, 253, 368, 21, 114, 85, 63, 323, 70, 80, 48, 307, 16, 240, 373, 84, 22, 378, 77, 125, 300, 293, 396, 229, 352, 250, 309, 286, 177, 47, 201, 119, 274, 204, 95, 54, 387, 328, 285, 83, 289, 192, 272, 288, 50, 224, 211, 376, 332, 236, 235, 97, 360, 324, 94, 18, 205, 92, 342, 234, 147, 290, 14, 139, 101, 82, 381, 316, 198, 374, 279, 382, 226, 1, 297, 336, 76, 66, 67, 257, 34, 395, 351, 361, 195, 108, 99, 256, 23, 391, 103, 390, 174, 334, 166, 183, 56, 113, 134, 24, 111, 91, 278, 345, 271, 189]
(Iter. 23) BestSol = Solution: cost=[-10428.0], size=[176], elements=[66, 141, 335, 23, 108, 370, 177, 285, 11, 17, 279, 383, 340, 35, 360, 293, 76, 70, 336, 200, 5, 193, 327, 297, 182, 9, 382, 350, 51, 222, 361, 120, 74, 321, 294, 172, 380, 208, 63, 260, 22, 90, 50, 276, 303, 331, 398, 164, 373, 56, 34, 110, 94, 328, 95, 184, 92, 85, 111, 183, 146, 325, 288, 44, 236, 151, 378, 29, 54, 165, 171, 4, 226, 114, 155, 179, 158, 381, 88, 246, 77, 97, 19, 121, 393, 371, 368, 229, 166, 342, 157, 192, 25, 16, 119, 62, 359, 80, 309, 84, 147, 49, 247, 352, 139, 58, 82, 7, 239, 339, 376, 270, 28, 244, 69, 386, 362, 162, 307, 18, 81, 245, 127, 251, 15, 100, 263, 385, 174, 24, 211, 389, 286, 366, 153, 220, 107, 304, 391, 250, 168, 99, 144, 281, 258, 148, 232, 124, 48, 117, 53, 238, 132, 296, 306, 30, 235, 379, 1, 129, 152, 65, 47, 259, 271, 227, 269, 125, 8, 215, 310, 242, 308, 156, 324, 176]
(Iter. 26) BestSol = Solution: cost=[-10615.0], size=[187], elements=[172, 240, 5, 63, 124, 169, 314, 245, 393, 228, 30, 146, 53, 1, 383, 274, 108, 25, 350, 247, 326, 312, 266, 159, 56, 110, 306, 195, 317, 58, 361, 332, 289, 397, 307, 32, 92, 31, 18, 16, 229, 323, 299, 123, 290, 352, 215, 230, 244, 160, 154, 83, 381, 170, 208, 227, 38, 17, 331, 125, 166, 196, 97, 354, 347, 190, 272, 237, 216, 371, 389, 65, 177, 236, 70, 234, 357, 114, 89, 200, 368, 7, 148, 47, 4, 246, 380, 265, 329, 141, 231, 51, 80, 385, 99, 10, 157, 156, 384, 250, 85, 351, 20, 288, 327, 113, 49, 325, 19, 348, 81, 22, 43, 54, 336, 82, 2, 100, 48, 152, 101, 192, 73, 285, 221, 259, 224, 21, 328, 162, 324, 335, 147, 137, 349, 72, 338, 173, 145, 23, 9, 339, 87, 239, 155, 396, 175, 252, 174, 366, 311, 61, 273, 249, 126, 95, 111, 171, 398, 223, 309, 34, 376, 62, 164, 232, 286, 387, 179, 365, 260, 183, 360, 107, 386, 77, 359, 293, 118, 333, 300, 112, 139, 342, 138, 35, 284]
(Iter. 61) BestSol = Solution: cost=[-10685.0], size=[182], elements=[21, 131, 172, 69, 7, 151, 28, 208, 110, 362, 355, 38, 171, 199, 251, 155, 260, 327, 179, 95, 80, 331, 356, 153, 244, 88, 86, 34, 232, 359, 220, 23, 98, 165, 16, 277, 285, 66, 312, 162, 145, 107, 183, 56, 324, 383, 70, 245, 99, 141, 309, 132, 148, 387, 25, 119, 289, 192, 166, 177, 157, 328, 193, 35, 276, 307, 108, 293, 263, 342, 318, 139, 51, 72, 9, 164, 258, 156, 54, 240, 195, 364, 85, 352, 397, 339, 316, 62, 111, 174, 101, 332, 49, 147, 30, 105, 303, 160, 53, 297, 168, 4, 246, 398, 325, 114, 301, 73, 97, 230, 24, 63, 385, 77, 18, 47, 236, 211, 373, 247, 196, 357, 124, 368, 15, 3, 259, 378, 273, 394, 250, 290, 304, 323, 154, 371, 229, 158, 134, 349, 76, 82, 92, 215, 205, 382, 329, 389, 17, 296, 350, 292, 216, 274, 190, 338, 152, 93, 239, 381, 125, 348, 233, 319, 226, 347, 294, 264, 284, 65, 112, 227, 390, 393, 58, 81, 249, 351, 281, 384, 209, 219]
(Iter. 82) BestSol = Solution: cost=[-10700.0], size=[184], elements=[54, 103, 326, 5, 50, 366, 211, 252, 61, 237, 290, 104, 192, 156, 351, 377, 289, 328, 101, 332, 77, 124, 66, 126, 224, 347, 154, 80, 208, 155, 385, 292, 250, 236, 4, 108, 193, 327, 70, 102, 268, 196, 125, 380, 137, 145, 285, 99, 216, 76, 358, 323, 114, 147, 21, 182, 146, 227, 150, 306, 315, 160, 352, 338, 230, 361, 73, 174, 218, 141, 273, 17, 30, 158, 45, 371, 309, 1, 348, 9, 244, 335, 269, 16, 260, 212, 277, 320, 127, 321, 265, 349, 151, 300, 87, 354, 92, 62, 95, 97, 23, 166, 228, 247, 165, 144, 286, 312, 25, 387, 69, 148, 121, 220, 357, 107, 110, 128, 251, 157, 142, 386, 263, 311, 304, 51, 190, 132, 259, 325, 134, 78, 389, 215, 85, 253, 288, 94, 58, 72, 18, 19, 63, 75, 195, 324, 365, 93, 164, 183, 111, 274, 303, 89, 131, 294, 81, 162, 28, 47, 340, 20, 398, 123, 370, 293, 200, 88, 356, 7, 397, 390, 234, 56, 362, 339, 152, 310, 256, 258, 199, 229, 266, 373]
(Iter. 100) BestSol = Solution: cost=[-10892.0], size=[187], elements=[316, 84, 262, 253, 38, 136, 286, 373, 277, 387, 385, 150, 300, 77, 155, 87, 395, 114, 49, 289, 224, 192, 67, 16, 101, 162, 254, 352, 235, 92, 371, 366, 53, 290, 377, 260, 108, 244, 236, 147, 304, 94, 95, 11, 119, 125, 285, 345, 54, 126, 386, 360, 210, 232, 158, 211, 159, 383, 354, 168, 21, 80, 247, 154, 99, 245, 331, 165, 34, 274, 368, 288, 195, 339, 378, 279, 328, 332, 355, 309, 17, 28, 66, 83, 307, 273, 372, 263, 69, 376, 15, 124, 179, 323, 240, 138, 157, 327, 85, 230, 70, 174, 56, 172, 324, 73, 3, 397, 100, 51, 111, 148, 384, 7, 24, 32, 248, 134, 364, 30, 265, 394, 48, 163, 349, 22, 223, 251, 398, 198, 113, 196, 1, 342, 320, 177, 139, 82, 259, 183, 184, 233, 81, 209, 63, 205, 292, 156, 25, 170, 361, 107, 109, 272, 229, 239, 281, 336, 348, 287, 47, 325, 295, 133, 241, 57, 50, 351, 227, 356, 234, 189, 190, 97, 301, 380, 379, 65, 142, 257, 381, 396, 143, 256, 0, 220, 122]
Total iterations: 271
maxVal = Solution: cost=[-10892.0], size=[187], elements=[316, 84, 262, 253, 38, 136, 286, 373, 277, 387, 385, 150, 300, 77, 155, 87, 395, 114, 49, 289, 224, 192, 67, 16, 101, 162, 254, 352, 235, 92, 371, 366, 53, 290, 377, 260, 108, 244, 236, 147, 304, 94, 95, 11, 119, 125, 285, 345, 54, 126, 386, 360, 210, 232, 158, 211, 159, 383, 354, 168, 21, 80, 247, 154, 99, 245, 331, 165, 34, 274, 368, 288, 195, 339, 378, 279, 328, 332, 355, 309, 17, 28, 66, 83, 307, 273, 372, 263, 69, 376, 15, 124, 179, 323, 240, 138, 157, 327, 85, 230, 70, 174, 56, 172, 324, 73, 3, 397, 100, 51, 111, 148, 384, 7, 24, 32, 248, 134, 364, 30, 265, 394, 48, 163, 349, 22, 223, 251, 398, 198, 113, 196, 1, 342, 320, 177, 139, 82, 259, 183, 184, 233, 81, 209, 63, 205, 292, 156, 25, 170, 361, 107, 109, 272, 229, 239, 281, 336, 348, 287, 47, 325, 295, 133, 241, 57, 50, 351, 227, 356, 234, 189, 190, 97, 301, 380, 379, 65, 142, 257, 381, 396, 143, 256, 0, 220, 122]
Time = 1804.112 seg



###########################################################################################################################
// 2 - Testing default/alpha1/best-improving/linear bias.
# 020

___________________________________________________________________________________________________________________________

# 040

___________________________________________________________________________________________________________________________

# 060

___________________________________________________________________________________________________________________________

# 080


___________________________________________________________________________________________________________________________

# 100


___________________________________________________________________________________________________________________________

# 200



___________________________________________________________________________________________________________________________

# 400


###########################################################################################################################
// 3 - Testing default/alpha2/best-improving/linear bias.
# 020

___________________________________________________________________________________________________________________________

# 040

___________________________________________________________________________________________________________________________

# 060

___________________________________________________________________________________________________________________________

# 080


___________________________________________________________________________________________________________________________

# 100


___________________________________________________________________________________________________________________________

# 200



___________________________________________________________________________________________________________________________

# 400


###########################################################################################################################
// 4 - Testing RPG/best-improving/linear bias.
# 020

___________________________________________________________________________________________________________________________

# 040

___________________________________________________________________________________________________________________________

# 060

___________________________________________________________________________________________________________________________

# 080


___________________________________________________________________________________________________________________________

# 100


___________________________________________________________________________________________________________________________

# 200



___________________________________________________________________________________________________________________________

# 400


###########################################################################################################################
// 5 - Testing RPG/first-improving/linear bias.
# 020

___________________________________________________________________________________________________________________________

# 040

___________________________________________________________________________________________________________________________

# 060

___________________________________________________________________________________________________________________________

# 080


___________________________________________________________________________________________________________________________

# 100


___________________________________________________________________________________________________________________________

# 200



___________________________________________________________________________________________________________________________

# 400


